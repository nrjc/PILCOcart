#LyX 2.2 created this file. For more info see http://www.lyx.org/
\lyxformat 508
\begin_document
\begin_header
\save_transient_properties true
\origin unavailable
\textclass article
\use_default_options true
\begin_modules
multicol
algorithm2e
\end_modules
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding auto
\fontencoding global
\font_roman "default" "default"
\font_sans "default" "default"
\font_typewriter "default" "default"
\font_math "auto" "auto"
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100 100
\font_tt_scale 100 100
\graphics default
\default_output_format pdf5
\output_sync 0
\bibtex_command default
\index_command default
\float_placement H
\paperfontsize default
\spacing single
\use_hyperref false
\papersize a4paper
\use_geometry true
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 1
\use_package esint 1
\use_package mathdots 1
\use_package mathtools 1
\use_package mhchem 1
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 1
\index Index
\shortcut idx
\color #008000
\end_index
\leftmargin 2cm
\topmargin 2cm
\rightmargin 2cm
\bottommargin 2cm
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation 0bp
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Title
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
hrulefill 
\backslash

\backslash
 
\end_layout

\begin_layout Plain Layout


\backslash
textbf{Technical Milestone Report} 
\backslash

\backslash
 
\end_layout

\begin_layout Plain Layout

F-CER54-3: Using machine learning to control an inverted double pendulum
 using camera feedback
\backslash

\backslash
 
\end_layout

\begin_layout Plain Layout


\backslash
vspace{0.2cm} 
\end_layout

\begin_layout Plain Layout


\backslash
normalsize  Nicholas Capel (nrjc2) 
\backslash

\backslash
 
\end_layout

\begin_layout Plain Layout


\backslash
normalsize Supervisor: Prof.
 Carl Edward Rasmussen 
\backslash

\backslash

\end_layout

\begin_layout Plain Layout


\backslash
hrulefill 
\backslash

\backslash

\end_layout

\end_inset


\end_layout

\begin_layout Abstract
The aim of this project is to implement the control of an inverted double
 pendulum in the PILCO framework using camera feedback.
 Work to date has involved MATLAB computer simulation experiments to understand
 how added delay and uncertainty about states can adversely affect training
 of the model and controller parameters in the PILCO framework.
 Additional work was done to determine an upper bound on the system delay
 introduced by processing times and video lag.
 Going forward, a physical system of the double pendulum will be implemented.
 Furthermore, experiments will be conducted on a SIMULINK model to better
 understand the problem from a control perspective, and the camera experiments
 will be refined.
\end_layout

\begin_layout Section
Introduction
\end_layout

\begin_layout Standard
The inverted double pendulum problem is a control problem.
\end_layout

\begin_layout Standard
ope
\begin_inset Float figure
placement H
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Diagram of setups
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Float figure
placement H
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Problem setup
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename diag/pendulum.png
	width 50text%

\end_inset


\end_layout

\end_inset


\begin_inset Float figure
placement H
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
System setup
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename diag/experimentalsetup.png
	width 50text%

\end_inset


\begin_inset CommandInset label
LatexCommand label
name "systemsetup"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
The state of the system is described by 
\begin_inset Formula $x$
\end_inset

.
 
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
x=[\dot{x_{t}},x_{t},\dot{\theta_{1(t)}},\theta_{1(t)},\dot{\theta_{2(t)}},\theta_{2(t)}]^{T}
\]

\end_inset


\end_layout

\begin_layout Standard
The objective of the control problem is to discover a controller to minimize
 the expected cost function over an infinite time horizon.
 In this project, the PILCO framework is used to both discover a model of
 the system, and to design a controller to stabilize the system 
\begin_inset CommandInset citation
LatexCommand cite
key "Rasmussen"

\end_inset

.
 
\end_layout

\begin_layout Standard
In reality, this corresponds to the pendulum performing two tasks:
\end_layout

\begin_layout Enumerate
Swing up: The pendulum is initialised at the position 
\begin_inset Formula $\theta_{1}=\pi,\,\theta_{2}=0$
\end_inset

 .
 The control system has to swing the pendulum up such that 
\begin_inset Formula $\theta_{1}=0$
\end_inset


\end_layout

\begin_layout Enumerate
Stabilize: The controller has to control the system state such that 
\begin_inset Formula $\theta_{1}=0,\,\theta_{2}=0$
\end_inset


\end_layout

\begin_layout Standard
In this project, another layer of difficulty is added.
 The current state vector of the system, 
\begin_inset Formula $x$
\end_inset

, cannot be directly read from sensors, but must be inferred from a video
 feed.
 Thus, the apparatus is set up as shown in Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "systemsetup"

\end_inset

.
\end_layout

\begin_layout Section
Motivation and Theory
\end_layout

\begin_layout Standard
The classical approach to the Inverted Double Pendulum problem involves
 writing down the Newtonian equations and making a first order approximation
 about the equilibrium point.
 However, this model-based approach fails when the linear approximation
 breaks down, and it is difficult to exactly characterise this point of
 failure.
 Thus, successful approaches to the problem of both swing up and stabilization
 involve defining multiple equilibrium states that can be linearized, and
 designing a controller to successfully transition between these states
\begin_inset CommandInset citation
LatexCommand cite
key "pendulum"

\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
PILCO algorithm
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
overview
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename diag/pilcooverview.pdf
	width 50text%

\end_inset


\begin_inset CommandInset label
LatexCommand label
name "pilcooverview"

\end_inset


\end_layout

\end_inset


\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
rollout
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename diag/rollout.pdf
	width 50text%

\end_inset


\begin_inset CommandInset label
LatexCommand label
name "pilcorollout"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
The PILCO approach is to use a data-based approach to learn a Gaussian Process
 model that describes the transition from 
\begin_inset Formula $x_{t}\rightarrow x_{t+1}$
\end_inset

.
 The Gaussian Process can model both the transition between the two states,
 as well as give an uncertainty estimate about the transition.
 By propagating the state forward in time, as in Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "pilcorollout"

\end_inset

, a cost function can be made: 
\begin_inset Formula 
\[
c=\sum_{t=0}^{T}E[f(x_{t})]
\]

\end_inset


\end_layout

\begin_layout Standard
We can thus perform gradient descent over the cost function, which is parameteri
zed by the controller parameters, to obtain an optimal controller to perform
 the stabilization task.
 
\end_layout

\begin_layout Standard
In each iteration of the PILCO algorithm (Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "pilcooverview"

\end_inset

), a GP dynamics model is learned using all previous data, and a cost function
 is minimized to discover the optimal controller policy.
 After which, the controller policy is applied to a real system (a rollout),
 and the algorithm repeats.
 
\end_layout

\begin_layout Standard
Stabilization of the inverted double pendulum has been attempted before,
 without success 
\begin_inset CommandInset citation
LatexCommand cite
key "Kukla"

\end_inset

.
 This is becasue noise and uncertainty about the pendulum state has significantl
y affected the ability of the PILCO algorithm to learn both the controller
 and system dynamics.
 
\end_layout

\begin_layout Section
Progress and Results
\end_layout

\begin_layout Subsection
Computer Simulations: Stabilization About Equilibrium Point
\end_layout

\begin_layout Standard
The first objective is to discover how delay and noise affect the tractability
 of the inverted double pendulum problem.
 In this series of experiments, a linear policy model was chosen for the
 control, and the initial state of the system is set such that 
\begin_inset Formula $\theta_{1}\approx0,\,\theta_{2}\approx0$
\end_inset

.
 
\end_layout

\begin_layout Standard
A computer model of the double pendulum was built by simulating Newton's
 equations in MATLAB.
 PILCO is then used on the simulated double pendulum, initialized with varying
 levels of noise and delay, and the results are 
\lang british
analysed
\lang english
 to understand if the PILCO control problem is tractable.
 
\end_layout

\begin_layout Standard
In previous experiments 
\begin_inset CommandInset citation
LatexCommand cite
key "Kukla"

\end_inset

 with the PILCO algorithm, the controller was able to perform swingup, but
 was unable to stabilize the penduli about the equilibria.
 Hence, it is appropriate to investigate the failure of the PILCO algorithm
 about the 
\begin_inset Formula $\theta_{1}\approx0,\,\theta_{2}\approx0$
\end_inset

 point.
 
\end_layout

\begin_layout Standard
A linear policy model was selected because it is the simplest controller
 that can achieve the task, and is used in traditional control theory approaches
 
\begin_inset CommandInset citation
LatexCommand cite
key "pendulum"

\end_inset

.
 
\end_layout

\begin_layout Standard
The Figure below represents a typical result of an attempted PILCO stabilization
:
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
GP predictions
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Float figure
placement H
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Base
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename diag/sampleRun2.eps
	width 50text%

\end_inset


\begin_inset CommandInset label
LatexCommand label
name "gpbase"

\end_inset


\end_layout

\end_inset


\begin_inset Float figure
placement H
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
With rollouts
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename diag/sampleRun.eps
	width 50text%

\end_inset


\begin_inset CommandInset label
LatexCommand label
name "gprollout"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Figures 
\begin_inset CommandInset ref
LatexCommand ref
reference "gpbase"

\end_inset

 and 
\begin_inset CommandInset ref
LatexCommand ref
reference "gprollout"

\end_inset

 show how the value of a given state variable is predicted to vary with
 time.
 
\end_layout

\begin_layout Standard
The blue mean line (Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "gpbase"

\end_inset

) represents the predicted trajectory of the inverted double pendulum given
 the controller.
 
\end_layout

\begin_layout Standard
The blue bars represent the 95% confidence interval of the trajectory as
 predicted by the model.
 
\end_layout

\begin_layout Standard
The green line (Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "gprollout"

\end_inset

) represents a rollout that is observed by the PILCO framework.
 
\end_layout

\begin_layout Standard
The red lines (Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "gprollout"

\end_inset

) represent simulated rollouts.
 These rollouts are drawn for display purposes, to evaluate the performance
 of the PILCO framework, but the results obtained are not fed in to the
 training of the GP.
 
\end_layout

\begin_layout Standard
After plotting the results of the PILCO experiments, the next step is to
 find a method to evaluate the performance of the PILCO framework.
 The PILCO framework can fail in two ways:
\end_layout

\begin_layout Enumerate
Model error: The framework learns an incorrect dynamics model.
\end_layout

\begin_layout Enumerate
Control error: The framework learns the correct dynamics model, but cannot
 discover a controller to control the unstable system.
 
\end_layout

\begin_layout Standard
If the control problem is tractable, two things should be observed.
 Firstly, as the number of steps increases, the predicted trajectory should
 be centered on the targeted state (0, in all cases).
 Furthermore, the 95% confidence interval should shrink as time increases.
 This demonstrates that the model predicts that it can keep the state of
 the double pendulum bound.
 Hence, there is no control error.
 
\end_layout

\begin_layout Standard
Secondly, the trajectories of the simulated and actual rollouts should be
 well described by the PILCO framework.
 
\end_layout

\begin_layout Standard
In an initial series of experiments, single trials were conducted for various
 delays and noise scaling factors.
 To model random noise, the computer setup corrupts the observation of each
 state by sampling from a Gaussian centered about the true value with a
 variance.
 The noise scaling factor scales this variance to model different magnitudes
 of noise.
 
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Stability
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename diag/stability.png
	width 70text%

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
The results are promising, suggesting that the PILCO algorithm is more strongly
 affected by noise than by delays.
 However, the analysis of the stability is crude: manual observation and
 classification of the trajectories is used to determine whether a controller
 is stable, somewhat stable, or unstable.
\end_layout

\begin_layout Standard
The experiment was then repeated 4 times, and a simple algorithm was used
 to quantify the stability of a single PILCO trial.
 A trial is initially assigned a stability rating of 0 (the most stable).
 When certain conditions are fulfilled, penalty points are added to the
 stability rating.
\end_layout

\begin_layout Standard
\begin_inset Float table
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Stability Rating
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="4" columns="3">
<features tabularvalignment="middle">
<column alignment="center" valignment="top" width="40text%">
<column alignment="center" valignment="top">
<column alignment="left" valignment="top" width="40text%">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Condition (evaluated for state variable 
\begin_inset Formula $\theta_{2}$
\end_inset

)
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Penalty
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Reasoning
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $\sigma(T_{max})>\sigma(T_{max-1})>\sigma(T_{max-2})$
\end_inset

 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
System state unbound 
\begin_inset Formula $\longrightarrow$
\end_inset

control error
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $\theta_{2}(actual)>\theta_{2}(pred)+2\sigma$
\end_inset

 or
\begin_inset Newline linebreak
\end_inset


\begin_inset Formula $\theta_{2}(actual)<\theta_{2}(pred)-2\sigma$
\end_inset

 
\begin_inset Newline linebreak
\end_inset

for 
\begin_inset Formula $>3/10,\,<7/10$
\end_inset

runs
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1
\end_layout

\end_inset
</cell>
<cell multirow="3" alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Rollouts not well described by model 
\begin_inset Formula $\longrightarrow$
\end_inset

model error
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $\theta_{2}(actual)>\theta_{2}(pred)+2\sigma$
\end_inset

 or
\begin_inset Newline linebreak
\end_inset


\begin_inset Formula $\theta_{2}(actual)<\theta_{2}(pred)-2\sigma$
\end_inset

 
\begin_inset Newline linebreak
\end_inset

for 
\begin_inset Formula $>7/10$
\end_inset

runs
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
2
\end_layout

\end_inset
</cell>
<cell multirow="4" alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Thus, an average stability rating can be computed for all 5 runs.
 
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Average stability rating over 5 runs
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename diag/stabilityFull.pdf
	width 70text%

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Once again, the trend identified in the original experiment does not disappear:
 the PILCO algorithm seems to be more strongly affected by noise than by
 delays.
 
\end_layout

\begin_layout Subsection
Camera Experiment
\end_layout

\begin_layout Standard
An experiment was conducted using a program written in Java to estimate
 the magnitude of the camera delay.
 
\end_layout

\begin_layout Enumerate
Camera and LED are placed in dark room.
\end_layout

\begin_layout Enumerate
LED is turned on, timing begins.
 
\end_layout

\begin_layout Enumerate
When camera observes an increase in brightness, stop timing.
 
\end_layout

\begin_layout Standard
This experiment aims to discover the minimum time taken for an output of
 the system to propagate to the input.
 Hence, the time recorded in this experiment should serve as an upper bound
 on the size of the delay.
 Repeating the experiment, it appears that:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
t_{delay}(max)=(307\pm60)ms
\]

\end_inset


\end_layout

\begin_layout Standard
Originally, it was hypothesized that the delay is on the order of 30ms.
 However, the delays obtained in this experiment were a full order of magnitude
 higher.
 This is most likely because the Java code that implements the experiment
 invokes a very expensive system call which can be removed.
 Hence, the actual delay will probably be far lower.
\end_layout

\begin_layout Section
Future Plans
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Project Timeline
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename diag/gantt.pdf
	width 100text%

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Control Theory Perspective
\end_layout

\begin_layout Standard
A model will be created in SIMULINK to model an optimal linear controller
 for the inverted double pendulum as well as the system itself.
 Experiments will be conducted with varying time delays and noise levels
 in this system to understand if the control problem is tractable using
 the best methods under noisy conditions with delay.
 
\end_layout

\begin_layout Subsection
Further Camera Experiments
\end_layout

\begin_layout Standard
The Java code implementing the camera experiments will be rewritten to remove
 the expensive system call.
 More experiments will be conducted with the camera system to obtain a more
 accurate delay.
 If the delay still remains extremely high, the experiment will be redone
 in C++ / C (which the actual system will be written in), to increase the
 speed of processing and to reduce the size of the delay.
 
\end_layout

\begin_layout Subsection
Variance Experiments
\end_layout

\begin_layout Standard
Initial experiments suggest that the PILCO algorithm is more strongly affected
 by noise than by delays.
 Given that, further experiments will be conducted to discover which of
 the 7 state variables 
\begin_inset Formula $x$
\end_inset

 will most severely affect the stability of the PILCO algorithm.
 To this end, the simulation experiment will be conducted.
 However, unlike the original, instead of introducing a noise scaling term
 to scale the noise corrupting all 6 state variables simultaneously, the
 total variance will instead be kept constant and only the distribution
 amongst the 6 state variables will vary.
 
\end_layout

\begin_layout Subsection
Physical Implementation
\end_layout

\begin_layout Standard
After this is done, the C++ code will be written, calling on OpenCV libraries
 in order to implement the PILCO algorithm for a physical system.
 If it is discovered that delays or noise levels are too high to implement
 a system controlled using visual feedback, the camera will be replaced
 in 
\lang british
favour
\lang english
 of either a faster camera, or for actual sensors on the joints of the physical
 system.
 
\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
key "Rasmussen"

\end_inset

Deisenroth, Marc, and Carl E.
 Rasmussen.
 "PILCO: A model-based and data-efficient approach to policy search." Proceedings
 of the 28th International Conference on machine learning (ICML-11).
 2011.
\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
key "pendulum"

\end_inset

Yamakita, M.
 A.
 S.
 A.
 K.
 I., et al.
 "Robust swing up control of double pendulum." American Control Conference,
 Proceedings of the 1995.
 Vol.
 1.
 IEEE, 1995.
\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
key "Kukla"

\end_inset

Kukla, M.
 M.
 (n.d.).
 Learning to control double inverted pendulum with vision feedback.
 
\end_layout

\end_body
\end_document
